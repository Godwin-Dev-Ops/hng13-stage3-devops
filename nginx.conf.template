user  nginx;
worker_processes  auto;

error_log  /var/log/nginx-real/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # --- Define custom log format (for watcher + Slack alerts) ---
    log_format bluegreen'$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         'pool=$http_x_app_pool release=$http_x_release_id '
                         'upstream_status=$upstream_status '
                         'upstream_addr=$upstream_addr '
                         'request_time=$request_time '
                         'upstream_response_time=$upstream_response_time';

    access_log /var/log/nginx-real/access.log bluegreen;
    error_log  /var/log/nginx-real/error.log warn;

    # --- Define upstreams for blue and green pools ---
    upstream app_blue {
        server app_blue:8080;
    }

    upstream app_green {
        server app_green:8080;
    }

    # --- Dynamic proxy routing based on ACTIVE_POOL ---
    map $ACTIVE_POOL $target_upstream {
        default app_blue;
        blue app_blue;
        green app_green;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            # Use whichever pool is currently active
            proxy_pass http://$target_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Custom headers for traceability in logs
            proxy_set_header X-App-Pool ${ACTIVE_POOL};
            proxy_set_header X-Release-Id $http_x_release_id;

            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
        }
    }
}

